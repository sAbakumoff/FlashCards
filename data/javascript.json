[
  {
    "Term":"calling an external javascript file syntax?",
    "Def":"&lt;script type=\"text/javascript\" src=\"javascript.js\"&gt; &lt;/script&gt;"
  },
  {
    "Term":"Is javascript case sensitive?",
    "Def":"yes!"
  },
  {
    "Term":"javascript comment syntax?",
    "Def":"/**/ for multiple lines<br/>// for a single line"
  },
  {
    "Term":"if a variable is not a function and does not have var then it is?",
    "Def":"a global variable"
  },
  {
    "Term":"can variables include other variables?",
    "Def":"yes"
  },
  {
    "Term":"x=x+y is the same as what? or x=x/y?",
    "Def":"x+=y or x/=y"
  },
  {
    "Term":"numbers + strings =?<br/>5+\"5\" = ?",
    "Def":"strings<br/>55"
  },
  {
    "Term":"javascript starts counting on what?",
    "Def":"0"
  },
  {
    "Term":"numerical comparison operators?",
    "Def":"x==y [x is equal to y]<br/>x===y [x is exactly equal to y]<br/>!= [not equal to]<br/>> [greater than]<br/>< [less than]<br/>>= [greater than or equal to]<br/><= [less than or equal to]"
  },
  {
    "Term":"logical operators?",
    "Def":"&& [and]<br/>|| [or]<br/>! [not]"
  },
  {
    "Term":"conditional variable syntax?",
    "Def":"z=(x==y)?5:6<br/>z = 5 if x=y;<br/>z = 6 if x!=y;"
  },
  {
    "Term":"else if conditional syntax?",
    "Def":"if(condition)<br/>{<br/>code<br/>}<br/>else if(condition)<br/>{<br/>code<br/>}"
  },
  {
    "Term":"switch statement syntax?",
    "Def":"switch(variable)<br/>{<br/>case 1;<br/>code<br/>break;<br/><br/>case \"example\";<br/>code<br/>break<br/><br/>default;<br/>code<br/>}"
  },
  {
    "Term":"alert box syntax?",
    "Def":"alert(\"message\");"
  },
  {
    "Term":"confirm box syntax?",
    "Def":"r=confirm(\"press a button\")<br/>if(r==true)<br/>{<br/>alert('you pressed ok!');<br/>}<br/>else<br/>{<br/>alert('you pressed cancel');<br/>}"
  },
  {
    "Term":"prompt box syntax?",
    "Def":"x=\"prompt(\"text here\",\"default value\");<br/>if(x!=\"null\" && x!=\"\")<br/>{<br/>alert(\"hello \"+x+\" how are you today?\")<br/>}"
  },
  {
    "Term":"syntax for line breaks in an alert box?",
    "Def":"'/n' + \" here\""
  },
  {
    "Term":"function syntax and purpose?",
    "Def":"function functionName(var1,var2,..,var99)<br/>{<br/>some code<br/>}<br/>functions allows scripts to be executed when called."
  },
  {
    "Term":"return statement syntax?",
    "Def":"function product(a,b)<br/>{<br/>return a*b;<br/>}<br/>alert(product(4,3)) <-- will alert 12<br/>return function gives a value back based on function variables."
  },
  {
    "Term":"javascript syntax for a (limited loop based on specifications) syntax?",
    "Def":"for(variable=startvalue;variable<=endvalue;variable=variable+increment)<br/>{<br/>code to be run until loop is complete.<br/>}"
  },
  {
    "Term":"The while loop (a loop executed when a specific condition is met) syntax?",
    "Def":"while(variable<=endvalue)<br/>{<br/>code to be executed<br/>}"
  },
  {
    "Term":"the break and continue statement?",
    "Def":"if(i==3)<br/>{<br/>break;<br/>}<br/>breaks loop<br/><br/>if(i==3)<br/>{<br/>continue;<br/>}<br/>breaks loop and restarts at next value;"
  },
  {
    "Term":"for... in statement syntax?",
    "Def":"var person={fname:\"john\",lname:\"doe\",age:\"25\"};<br/>var x;<br/>for (x in person)<br/>{<br/>document.write(person[x]+\" \");<br/>}<br/>-------<br/>loops through all variables attached to person;"
  },
  {
    "Term":"HTML DOM mouse events?",
    "Def":"onclick<br/>ondblclick<br/>mousedown<br/>mousemove<br/>mouseover<br/>mouseout<br/>mouseup"
  },
  {
    "Term":"onsubmit should be used for what and where?",
    "Def":"validating form fields<br/>ex. <form action=\"blah.asp\" method=\"post\" onsubmit=\"return checkForm()\">"
  },
  {
    "Term":"special text insertions?",
    "Def":"\\' single quote<br/>\\\" double quote<br/><br/> new line<br/>\\r carriage return<br/>\\t tab<br/>\\b backspace<br/>\\f form feed"
  },
  {
    "Term":"properties of methods defined?",
    "Def":"properties - are values associated with an object i.e. length<br/><br/>methods - are actions (functions) that can be performed on objects ie toUpperCase [an uppercase method]"
  },
  {
    "Term":"types of strings object properties",
    "Def":"constructor- returns the function that created the objects prototype.<br/><br/>length- returns the length of characters of a string.<br/><br/>prototype-allows you to add properties and methods to an object."
  },
  {
    "Term":"object based programming what does this mean?",
    "Def":"objects have properties & methods for example<br/>{<br/>var txt=\"Hello World!\";<br/>document.write(txt.length)<br/>}<br/>gives the property of length of txt and writes it to the doc which is 12."
  },
  {
    "Term":"how to make a case sensitive (single) search?",
    "Def":"(\"w3schools\") - case sensitive<br/>(/w3schools/) - case insensitive<br/>/content/;"
  },
  {
    "Term":"making a global (multiple) case insensitive search?",
    "Def":"/content goes here/g;<br/>var x = /money/g"
  },
  {
    "Term":"the last index in a string is?",
    "Def":"string.length-1"
  },
  {
    "Term":"string object methods",
    "Def":"..."
  },
  {
    "Term":"valueOf() method does what?",
    "Def":"returns the primitive value of a string.<br/><br/>e.x. string.valueOf()<br/>x= \"Hi!\"<br/>document.write(x.valueOf())----> Hi!"
  },
  {
    "Term":"toUpperCase() method does what?",
    "Def":"converts a string to uppercase letters<br/><br/>e.x. string.toUpperCase()<br/>x=\"blah\"<br/>document.write(x.toUpperCase())---->BLAH"
  },
  {
    "Term":"toLowerCase() method does what?",
    "Def":"converts a string to lowercase letters<br/><br/>e.x. string.toLowerCase()<br/>x=\"BLAH\"<br/>document.write(x.toLowerCase())---->blah"
  },
  {
    "Term":"substring() does what?",
    "Def":"extracts characters from a string between two specified #'s and returns it as a new string. [start at 0]<br/><br/>e.x. string.substring(from,to)<br/>x=\"hello world\"<br/>document.write(x.substring(0,4))--->hello"
  },
  {
    "Term":"substr() does what?",
    "Def":"same as substring except uses length as opposed to a stop number<br/><br/>e.x. string.substr(start,length)<br/>x=\"hello world\"<br/>document.write(x.substr(0,4))--->hello"
  },
  {
    "Term":"split() method does what?",
    "Def":"splits a string into an array of substring and returns the new array<br/><br/>e.x. string.split(separator,limit)<br/>x=\"hello world\"<br/>document.write(x.split(\" \",1))---> hello"
  },
  {
    "Term":"slice() method does what?",
    "Def":"extracts a part of a string and returns the extracted part in a new string(-1 if null)<br/><br/>e.x. string.slice(begin,end)<br/>x=\"hello\"<br/>document.write(x.slice(0,3))---> hell"
  },
  {
    "Term":"search() method does what?",
    "Def":"searches for a match between a regular expression and the string and returns the position<br/><br/>e.x. string.search(regexp)<br/>x=\"hello world\"<br/>document.write(x.search(\"wo\"))--->7"
  },
  {
    "Term":"replace() method does what?",
    "Def":"searches for a regexp or substring and replaces it with a new string.<br/><br/>e.x. string.replace(regexp/substr,newstring)<br/>x=\"hello world\"<br/>document.write(x.replace(\"hello\",\"goodbye\"))-->goodye world"
  },
  {
    "Term":"match() method does?",
    "Def":"searches for a match between the regexp and a string and returns the matchs<br/><br/>e.x. string.match(regexp)<br/>x=\"hello world\"<br/>document.write(x.match(\"hello\"))-->hello"
  },
  {
    "Term":"indexOf() method does?",
    "Def":"returns the position of the first found occurrence of a specified value in a string<br/><br/>e.x. string.indexOf(searchstring,start)<br/>x=\"hello world\"<br/>document.write(x.indexOf(\"world\",0))-->7"
  },
  {
    "Term":"lastIndexOf() method does what?",
    "Def":"returns the position of the last occurence of a specified value in a string.<br/><br/>e.x. string.lastIndexOf(regexp,start)<br/>x=\"hello world\"<br/>document.write(x.lastIndexOf(\"wo\",0))--->7"
  },
  {
    "Term":"fromCharCode() method does what?",
    "Def":"converts unicode values into characters [does not use strings]<br/><br/>document.write(string.fromCharCode(72))--> H"
  },
  {
    "Term":"concat() method does?",
    "Def":"joins 2 or more strings then returns a copy.<br/><br/>e.x. string.concat(string2)<br/>x=\"hello world \"<br/>y=\"goodbye world\"<br/>document.write(x.concat(y))--> hello world goodbye world"
  },
  {
    "Term":"charCodeAt() method does?",
    "Def":"returns the unicode of the character at a specific index in a string.<br/><br/>e.x. string.charCodeAt(index)<br/>x=\"hello world\"<br/>document.write(x.charCodeAt(0))--->72"
  },
  {
    "Term":"charAt() method does?",
    "Def":"returns the character at the specified index<br/><br/>e.x. string.charAt(index)<br/>x=\"hello world\"<br/>document.write(x.charAt(0))-->h"
  },
  {
    "Term":"what is an array?",
    "Def":"an object used to store multiple values in a single variable."
  },
  {
    "Term":"creating an uncondensed array?",
    "Def":"var x = new Array(); //regular array<br/>x[0] = \"black\";<br/>x[1] = \"white\";<br/>x[2] = \"green\";<br/>x[3] = \"yellow\";<br/>x[4] = \"blue\";<br/>x[5] = \"red\";"
  },
  {
    "Term":"creating a condensed array?",
    "Def":"var x = new array (\"white\",\"black\",\"red\",\"green\",\"blue\")<br/>//condensed array"
  },
  {
    "Term":"creating a literal array?",
    "Def":"var x = [\"black\",\"white\",\"red\",\"blue\",\"green\"]"
  },
  {
    "Term":"how to access an array?",
    "Def":"string[array index]"
  },
  {
    "Term":"array object methods",
    "Def":"..."
  },
  {
    "Term":"concat() method does what?",
    "Def":"joins 2 or more arrays<br/><br/>array.concat(array2)"
  },
  {
    "Term":"join() does what?",
    "Def":"joins all elements of an array into a string<br/><br/>array.join(seperator)<br/>x=[\"1\",\"2\",\"3\"]<br/>document.write(x.join(\" and \")) --> 1 and 2 and 3"
  },
  {
    "Term":"valueOf() method does what?",
    "Def":"returns the primitive value of an array<br/><br/>array.valueOf()"
  },
  {
    "Term":"pop() does what?",
    "Def":"removes the last element of an array and returns it [alters original]<br/><br/>array.pop()<br/>fruits=[\"apple\",\"nana\",\"grape\",\"orange\"]<br/>document.write(fruits.pop())-->orange<br/>document.write(fruits())-->apple,nana,grape"
  },
  {
    "Term":"toString() method does what?",
    "Def":"converts an array to a string, returns the result<br/><br/>x=[\"1\",\"2\",\"3\"]<br/>document.write(x.toString())-->1,2,3"
  },
  {
    "Term":"unshift() method does what?",
    "Def":"adds new elements to the beginning of an array and returns new length<br/><br/>array.unshift(ele1,ele2,...,ele99)<br/>x=[\"1\",\"2\",\"3\"]<br/>document.write(x.unshift(\"4\"))-->4"
  },
  {
    "Term":"push() method does what?",
    "Def":"adds new elements to an array [alters original]<br/><br/>array.push(ele1,ele2,..,ele99)<br/>x=[\"1\",\"2\",\"3\"]<br/>x.push(\"4\")<br/>document.write(x)-->1,2,3,4"
  },
  {
    "Term":"reverse() method does?",
    "Def":"reverse the order of elements in an array (first is last, last is first)<br/><br/>array.reverse()<br/>x=[\"1\",\"2\",\"3\"]<br/>x.reverse()<br/>document.write(x)-->3,2,1"
  },
  {
    "Term":"shift() method does what?",
    "Def":"removes the first elements in an array and returns it [alters original]<br/><br/>array.shift()<br/>x=[\"1\",\"2\",\"3\"]<br/>document.write(x.shift())--->1<br/>document.write(x)--->2,3"
  },
  {
    "Term":"slice() method does what?",
    "Def":"selects a part of an array and returns an array [starts from 0, original not changed]<br/><br/>array.slice(begin,length)<br/>x=[\"1\",\"2\",\"3\"]<br/>document.write(x.slice(0,2))-->1,2"
  },
  {
    "Term":"sort() method does what?",
    "Def":"sorts the elements of an array (alphabetical default) [changes original]<br/><br/>array.sort(sort function)<br/><br/>x=[\"a\",\"b\",\"c\"]<br/>y=[\"a\",\"c\",\"b\"]<br/>document.write(y.sort())-->a,b,c"
  },
  {
    "Term":"sort() for numbers?",
    "Def":"sorting by numbers is different, using a sort function is necessary.<br/><br/>function sortNumber(a,b)<br/>{<br/>return b-a;// for descending<br/>return a-b;// for ascending<br/>}"
  },
  {
    "Term":"the Math object allows you to?",
    "Def":"perform mathematical equations and tasks."
  },
  {
    "Term":"Math object properties",
    "Def":"..."
  },
  {
    "Term":"e is what?",
    "Def":"eulers numbers<br/><br/>approx (2.718)"
  },
  {
    "Term":"LN2 is what?",
    "Def":"natural logarithm of 2<br/><br/>approx (0.693)"
  },
  {
    "Term":"LN10 is what?",
    "Def":"natural logarithm of 10<br/><br/>approx (2.302)"
  },
  {
    "Term":"LOG2E is what?",
    "Def":"base-2 logarithm of E<br/><br/>approx (1.442)"
  },
  {
    "Term":"LOG10E",
    "Def":"base-10 logarithm of E<br/><br/>approx (0.434)"
  },
  {
    "Term":"PI is what?",
    "Def":"PI<br/><br/>approx (3.14159)"
  },
  {
    "Term":"SQRT1_2 is what?",
    "Def":"square root of 1/2<br/><br/>approx (0.707)"
  },
  {
    "Term":"SQRT2 is what?",
    "Def":"square root of 2<br/><br/>approx (1.414)"
  },
  {
    "Term":"Math object methods",
    "Def":"..."
  },
  {
    "Term":"parseInt() does what?",
    "Def":"gets a number from a string [not part of the math object]<br/><br/>parseInt(string)<br/>document.write(parseInt(\"45.1nn\"))-->451<br/>document.write(parseInt(\"45nn\"))-->45"
  },
  {
    "Term":"parseFloat() does what?",
    "Def":"gets a decimal number from a string [not part of the math object]<br/><br/>parseFloat(string)<br/>document.write(parseFloat(\"45.1nn\"))-->45.1<br/>document.write(parseFloat(\"45nn\"))-->45"
  },
  {
    "Term":"what does abs() method do?",
    "Def":"determines the absolute value of x<br/><br/>Math.abs(x)<br/>document.write(Math.abs(-7))-->7"
  },
  {
    "Term":"what does acos() method do?",
    "Def":"returns the arccosine of a number in radians<br/><br/>Math.acos(x)<br/>document.write(Math.acos(0.64))-->0.87629"
  },
  {
    "Term":"what does atan() method do?",
    "Def":"returns the arctangent of a number in radians<br/><br/>Math.atan(x)<br/>document.write(Math.atan(2))-->1.1071"
  },
  {
    "Term":"what does atan2() method do?",
    "Def":"returns the arctangent between positive x-axis and the point<br/><br/>Math.atan2(x,y)<br/>document.write(Math.atan2(8,4))-->1.1071"
  },
  {
    "Term":"what does ceil() method do?",
    "Def":"rounds a number upwards to the nearest interger and returns the result<br/><br/>Math.ceil(number)<br/>document.write(Math.ceil(2.3))--> 3"
  },
  {
    "Term":"what does cos() method do?",
    "Def":"returns the cosine of a number <br/><br/>Math.cos(number)<br/>document.write(Math.cos(3))-->-0.9899"
  },
  {
    "Term":"what does exp() method do?",
    "Def":"returns the value of a user-defined power to eulers number<br/><br/>Math.exp(number)<br/>document.write(Math.exp(1))-->2.7183"
  },
  {
    "Term":"what does floor() method do?",
    "Def":"rounds a number to down to the nearest interger<br/><br/>Math.floor(number)<br/>document.write(Math.floor(5.3))-->5"
  },
  {
    "Term":"what does the log() method do?",
    "Def":"returns the natural logarithm (base E) of a number<br/><br/>Math.log(number)<br/>document.write(Math.log(2))-->0.6931"
  },
  {
    "Term":"what does the max() method do?",
    "Def":"returns the number with the highest value<br/><br/>Math.max(x,y,z)<br/>document.write(Math.max(10,5,-1))-->10"
  },
  {
    "Term":"what does min() method do?",
    "Def":"returns the number with the lowest value<br/><br/>Math.min(x,y,z)<br/>document.write(Math.min(10,5,-1))-->-1"
  },
  {
    "Term":"what does pow() method do?",
    "Def":"returns the value of x to the power of y<br/><br/>Math.pow(x,y)<br/>document.write(Math.pow(4,2))-->16"
  },
  {
    "Term":"what does the random() method do?",
    "Def":"returns a random number between 0 and 1 [use .floor() and * to get a higher number]<br/><br/>Math.random()<br/>document.write(Math.random())-->0.57"
  },
  {
    "Term":"what does round() method do?",
    "Def":"rounds a number to the nearest interget<br/><br/>Math.round(x)<br/>document.write(Math.round(5.5))-->6<br/>document.write(Math.round(5.49))-->5"
  },
  {
    "Term":"what does sin() do?",
    "Def":"returns the sine of a number (-1 to 1)<br/><br/>Math.sin(number)<br/>document.write(Math.sin(3))-->0.1411"
  },
  {
    "Term":"what does sqrt() do?",
    "Def":"returns the square root of a number<br/><br/>Math.sqrt(number)<br/>document.write(Math.sqrt(9))-->3"
  },
  {
    "Term":"what does the method tan() do?",
    "Def":"returns the tangent of a number<br/><br/>Math.tan(number)<br/>document.write(Math.tan(90))-->-1.995"
  },
  {
    "Term":"the purpose of the boolean object?",
    "Def":"to convert a non-boolean value to a boolean value (true or false) value."
  },
  {
    "Term":"the boolean has a default value of?",
    "Def":"true"
  },
  {
    "Term":"7 values that make boolean false",
    "Def":"0<br/>-0<br/>null<br/>\" \"<br/>false<br/>undefined<br/>NaN <-- not a number"
  },
  {
    "Term":"booleans only non-primitve is what?",
    "Def":"toString()<br/><br/>boolean.toString()"
  },
  {
    "Term":"regexp means what?",
    "Def":"regular expression"
  },
  {
    "Term":"what is a regular expression?",
    "Def":"an object that describes a pattern of characters"
  },
  {
    "Term":"regexp brackets",
    "Def":"find a range of characters"
  },
  {
    "Term":"bracket examples",
    "Def":"[new RegExp(\"[abc]\") or /[abc]/]<br/><br/>[abc] - find any character between bracks<br/>[^abc] - find any char not in bracks<br/>[0-9] - find any digit 0-9<br/>[A-Z] - find any char from uppercase A to uppercase Z<br/>[a-z] - find any char from lowercase a to lowercase z<br/>[A-z] - find any char from uppercase A to lowercase Z<br/>(red|blue|green) - find any of the alternations specified"
  },
  {
    "Term":"how is regexp defined?",
    "Def":"var patt = new RegExp(pattern,modifiers)<br/>or <br/>var patt = /pattern/modifiers"
  },
  {
    "Term":"what are regexp modifiers?",
    "Def":"used to perform case-insensitive and global searches"
  },
  {
    "Term":"RegExp modifiers",
    "Def":"..."
  },
  {
    "Term":"what does the i modifier do?",
    "Def":"performs a case insensitive search<br/><br/>/regexp/i<br/>x=\"hello world\"<br/>y=/world/i<br/>document.write(x.match(y))--> world"
  },
  {
    "Term":"what does the g modifier do?",
    "Def":"performs a global match (instead of stopping at first found)<br/><br/>/regexp/g<br/>x=\"hello world\"<br/>y=/o/g<br/>document.write(x.match(y))--> o,o"
  },
  {
    "Term":"regexp metacharacters",
    "Def":"are characters with a special meaning"
  },
  {
    "Term":". meta char does what?",
    "Def":"finds a single character (can be used in combination) except newline or other line terminators<br/><br/>x=\"hello world\"<br/>y=/h.l/g<br/>document.write(x.match(y))--> hel"
  },
  {
    "Term":"\\B meta character does what?",
    "Def":"find a match that is not at the beginning of a word (or returns null)<br/><br/>x=\"hello world\"<br/>y=/\\Borld/g<br/>document.write(x.match(y))--> orld"
  },
  {
    "Term":"\\0 meta character does what?",
    "Def":"finds a nul character"
  },
  {
    "Term":"<br/> meta chracter does what?",
    "Def":"used to find a newline character (only useful in alert text)<br/><br/>x=\"hello <br/> world\"<br/>y=/<br/>/g<br/>document.write(x.search(y))--> 5"
  },
  {
    "Term":"\\b meta character does what?",
    "Def":"used to find a match at the beginning or end of a word (if none null)<br/><br/>x=\"hello world\"<br/>y=/\\bworld/g<br/>document.write(x.match(y))--> world"
  },
  {
    "Term":"\\S meta character does what?",
    "Def":"used to find a non-whitespace character<br/><br/>x=\"hello world\"<br/>y=/\\S/g<br/>document.write(x.match(y))-->h,e,l,l,o,w,o,r,l,d"
  },
  {
    "Term":"\\w meta character does what?",
    "Def":"finds a word character (a-z,A-Z,0-9)<br/><br/>x=\"hello world!%\"<br/>y=/\\w/g<br/>document.write(x.match(y))--> h,e,l,l,o, ,w,o,r,l,d"
  },
  {
    "Term":"\\W meta character does what?",
    "Def":"finds a non-word character<br/><br/>x=\"hello world!%\"<br/>y=/\\W/g<br/>document.write(x.match(y))--> !,%"
  },
  {
    "Term":"\\d meta character does what?",
    "Def":"finds a digit from 0-9<br/><br/>x=\"hell1o world\"<br/>y=/\\d/g<br/>document.write(x.match(y))--> 1"
  },
  {
    "Term":"\\D meta character does what?",
    "Def":"used for find a non-digit character<br/><br/>x=\"hello world9\"<br/>y=/\\D/g<br/>document.write(x.match(y))--> h,e,l,l,o, ,w,o,r,l,d"
  },
  {
    "Term":"\\s meta character does what?",
    "Def":"finds a whitespace chracters<br/><br/>x=\"hello world \"<br/>y=/\\s/g<br/>document.write(x.match(y))--> , ,"
  },
  {
    "Term":"regexp quantifiers",
    "Def":"can be used in conjunction with metacharacters"
  },
  {
    "Term":"what does the n+ quantifier do?",
    "Def":"matches any string that contains at one n<br/><br/>x=\"hello world\"<br/>y=/w+/g<br/>document.write(x.match(y))--> hello,world"
  },
  {
    "Term":"what does the n* quantifier do?",
    "Def":"matches any string that contains zero or more occurrences of n<br/><br/>x=\"hello world\"<br/>y=/lo*/g<br/>document.write(x.match(y))--> lo,l"
  },
  {
    "Term":"what does the n? quantifier do?",
    "Def":"matches any string that contains zero or one occurences of n<br/><br/>x=\"hello world\"<br/>y=/lo?/g<br/>document.write(x.match(y))--> lo,l"
  },
  {
    "Term":"what does the n{x} quantifier do?",
    "Def":"matches any string that contains a sequences of x n's<br/><br/>x=\"100, 1000 or 10000\"<br/>y=/\\d{4}/g<br/>document.write(x.match(y))--> 1000,1000"
  },
  {
    "Term":"what does the n{x,y} quantifier do?",
    "Def":"matches any string that contains a sequence of X to Y n's [x and y must be #'s]<br/><br/>x=\"100, 1000 or 10000\"<br/>y=/\\d{4,5}/g<br/>document.write(x.match(y))--> 1000,10000"
  },
  {
    "Term":"what does the n{x,} quantifier do?",
    "Def":"matches any string that contains a sequence of atleast X n's [x must be a number]<br/><br/>x=\"100, 1000 or 10000\"<br/>y=/\\d{3,}/g<br/>document.write(x.match(y))--> 100,1000,10000"
  },
  {
    "Term":"what does the n$ quantifier do?",
    "Def":"matches any string with n at the end<br/><br/>x=\"hello world\"<br/>y=/ld$/g<br/>document.write(x.match(y))--> ld"
  },
  {
    "Term":"what does the ^n quantifier do?",
    "Def":"matches any string with n at the beginning <br/><br/>x=\"hello world\"<br/>y=/^he/g<br/>document.write(x.match(y))--> he"
  },
  {
    "Term":"what does the ?=n quantifier do?",
    "Def":"matches any string that is followed by a specific string of n<br/><br/>x=\"hello world\"<br/>y=/hello(?=world)/g<br/>document.write(x.match(y))--> hello"
  },
  {
    "Term":"what deos the ?!n quantifier do?",
    "Def":"matches any string that is not follwed by specific string n<br/><br/>x=\"hello world\"<br/>y=/hello(?!world)/g<br/>document.write(x.match(y))-->"
  },
  {
    "Term":"regexp object properties",
    "Def":"..."
  },
  {
    "Term":"what does the global property do?",
    "Def":"specified if the \"g\" modifier is set<br/>/regexp/g"
  },
  {
    "Term":"what does the ignoreCase property do?",
    "Def":"specified if the \"i\" modifier is set<br/>/regexp/i"
  },
  {
    "Term":"what does the lastIndex property do?",
    "Def":"specified the index at which to start the next match [specified character position after last match]<br/><br/>x=\"string string string\"<br/>y=/regexp/gi<br/>while(y.text(x)==true)<br/>{<br/>document.write(\"i found the index at: \" + y.lastIndex)<br/>}<br/>firstmatch index number, second match index number"
  },
  {
    "Term":"what does the source property do?",
    "Def":"returns the source of the regexp<br/><br/>x=/regexp/gi<br/>document.write(x.source)-->regexp"
  },
  {
    "Term":"regexp object methods",
    "Def":"..."
  },
  {
    "Term":"what does the compile() method do?",
    "Def":"[edits source]<br/><br/>the compile method is used to compile and recompile a regexp<br/>y=/regexp/<br/>y.compile(regexp,modifier)"
  },
  {
    "Term":"what does the exec() method do?",
    "Def":"tests for a match in a string (returns matched text if found null if not)<br/><br/>y=/regexp/<br/>y.exec(string)"
  },
  {
    "Term":"what does the test() method do?",
    "Def":"tests for a match in a string, returns true or false (true if found, false if not)<br/><br/>y=/regexp/<br/>y.test(string)"
  },
  {
    "Term":"can javascript detect a browser type?",
    "Def":"yes and version."
  },
  {
    "Term":"is there a standard that applies to the navigator object?",
    "Def":"no, therefore determining browsers becomes quite an ordeal."
  },
  {
    "Term":"finding browsers and app.name?",
    "Def":"navigator.appName - name<br/>navigator.appVersion - version #"
  },
  {
    "Term":"determining if cookies are enabled?",
    "Def":"navigator.cookieEnabled - true or false"
  },
  {
    "Term":"what is a cookie?",
    "Def":"a cookie is a variable that is stored on a users computer."
  },
  {
    "Term":"What is the command to display a prompt?",
    "Def":"prompt(\"Text Here\");"
  },
  {
    "Term":"How do you assign the value from a prompt to a string?",
    "Def":"var stringVar = prompt(\"Text Here\");"
  },
  {
    "Term":"How do you assign the value from a prompt to a non-string variable?",
    "Def":"Using a parse. Example : var intVar = parseInt(prompt(\"Text Here\"));"
  },
  {
    "Term":"How do you assign a default value to a prompt?",
    "Def":"Using the second parameter. Example: prompt(\"Enter Age:\", \"18\");"
  },
  {
    "Term":"How do you display an alert?",
    "Def":"alert(\"Alert Text Here\");"
  },
  {
    "Term":"How do you test that a variable contains a valid number?",
    "Def":"isNaN(varHere); //Returns true or false."
  },
  {
    "Term":"How do you display a confirmation?",
    "Def":"confirm(\"Message Text Here\");"
  },
  {
    "Term":"What values can confirm() return?",
    "Def":"True or false"
  },
  {
    "Term":"How do you assign the return value of confirm() to a variable?",
    "Def":"var answerVar = confirm(\"Message Text Here\");"
  },
  {
    "Term":"How do you access a page element by id?",
    "Def":"document.getElementById(id);"
  },
  {
    "Term":"How do you assign actions to the window onLoad event?",
    "Def":"window.onload = function() {//actions here}"
  },
  {
    "Term":"What are the four attributes of the $lt;script&gt; tag?",
    "Def":"Type, Src, Charset, and Defer"
  },
  {
    "Term":"In the &lt;script&gt; tag, how is the Type attribute used?",
    "Def":"&lt;script type=\"text/javascript\"&gt; //Used to denote the type of script being used. Always this for JavaScript"
  },
  {
    "Term":"In the &lt;script&gt; tag, how is the Src attribute used?",
    "Def":"&lt;script src=\"fileName.js\"&gt; //Used to denote external file for script use"
  },
  {
    "Term":"In the &lt;script&gt; tag, how is the Defer attribute used?",
    "Def":"&lt;script defer=\"defer\"&gt; //Used to ensure the code doesn't run until the rest of the page has been loaded"
  },
  {
    "Term":"What is the &lt;noscript&gt; tag used for?",
    "Def":"The text between the opening and closing tag is displayed if JavaScript is disabled or otherwise not available"
  },
  {
    "Term":"How do you write a line to the current element of the DOM?",
    "Def":"document.writeln(\"Text Here\"); //Advances to new line after text"
  },
  {
    "Term":"What is the DOM?",
    "Def":"Document Object Model"
  },
  {
    "Term":"What is AJAX?",
    "Def":"Asynchronous JavaScript And XML"
  },
  {
    "Term":"Is JavaScript case sensitive?",
    "Def":"Yes"
  },
  {
    "Term":"How do statements end in JavaScript?",
    "Def":"With a semicolon \";\""
  },
  {
    "Term":"How do you create a single line comment in JavaScript?",
    "Def":"With two forward slashes \"//\""
  },
  {
    "Term":"How do you create a multi-line comment in JavaScript?",
    "Def":"Start with a forward slash and asterisk, and then end with an asterisk and forward slash. \"/*\" \"*/\""
  },
  {
    "Term":"What are the valid characters for an identifier in JavaScript?",
    "Def":"Letters, Numbers, Underscores, and Dollar Signs"
  },
  {
    "Term":"How do you denote a string in JavaScript",
    "Def":"With either single or double quotes surrounding the data"
  },
  {
    "Term":"What is the string escape sequence to start a new line in JavaScript?",
    "Def":"<br/>"
  },
  {
    "Term":"How do you declare a variable in JavaScript?",
    "Def":"var variableName;"
  },
  {
    "Term":"How do you create a Date object in JavaScript?",
    "Def":"var dateVar = new Date();"
  },
  {
    "Term":"How do you create an Array object in JavaScript?",
    "Def":"var arrayVar = new Array();"
  },
  {
    "Term":"How do you view the current web address using JavaScript?",
    "Def":"window.location();"
  },
  {
    "Term":"How do you make the browser load a new page using JavaScript?",
    "Def":"window.location = \"New Web Address Here\";"
  },
  {
    "Term":"How do you write text to the current element of the DOM?",
    "Def":"document.write(\"Text Here\"); //Remains on current line"
  },
  {
    "Term":"What method allows you to set the digit precision of a decimal number?",
    "Def":"toFixed(digitCount);"
  },
  {
    "Term":"For textboxes, How do you get the current value?",
    "Def":"document.getElementById(\"TextBoxId\").value;"
  },
  {
    "Term":"For textboxes, How do you set the control to be disabled?",
    "Def":"document.getElementById(\"TextBoxId\").disabled = true; //Could also be false to enable it"
  },
  {
    "Term":"For textboxes, how do you set focus on the control?",
    "Def":"document.getElementById(\"TextBoxId\").focus;"
  },
  {
    "Term":"How do you code an If statement in JavaScript?",
    "Def":"if (condition) {}"
  },
  {
    "Term":"How do you code an If Else statement in JavaScript?",
    "Def":"if (condition){<br/>}<br/>else {}"
  },
  {
    "Term":"How do you code an If Else If statement in JavaScript?",
    "Def":"if (condition) {<br/>}<br/>else if (condition) {}"
  },
  {
    "Term":"How do you code a while statement in JavaScript?",
    "Def":"while (condition) {}"
  },
  {
    "Term":"How do you code a for statement in JavaScript?",
    "Def":"for (counter; condition; incrementor) {}"
  },
  {
    "Term":"How do you create a function in JavaScript?",
    "Def":"var functionName = function(param1, param2, paramN) {}"
  },
  {
    "Term":"How do you create a function that returns a value in JavaScript?",
    "Def":"var functionName = function(param1, param2, paramN) {<br/>//Other steps<br/>return returnValue;<br/>}"
  },
  {
    "Term":"What is an event handler?",
    "Def":"A function that is called with a certain event occurs. Examples of these include button.onclick and window.onload."
  },
  {
    "Term":"How do you code a button.onclick event handler?",
    "Def":"document.getElementById(\"ButtonId\").onclick = functionName;"
  },
  {
    "Term":"For radio buttons, how do you get the text value of the control?",
    "Def":"document.getElementById(\"radioButtonId\").value;"
  },
  {
    "Term":"For radio buttons, how do you get the current checked status of the control?",
    "Def":"document.getElementById(\"radioButtonId\").checked;"
  },
  {
    "Term":"For checkboxes, how do you get the text value of the control?",
    "Def":"document.getElementById(\"checkboxId\").value;"
  },
  {
    "Term":"For checkboxes, how do you get the current checked status of the control?",
    "Def":"document.getElementById(\"checkboxId\").checked;"
  },
  {
    "Term":"For lists, how do you get the value or the currently selected item?",
    "Def":"document.getElementById(\"listId\").value;"
  },
  {
    "Term":"For a text area, how do you get the current value of the control?",
    "Def":"document.getElementById(\"textAreaId\").value;"
  },
  {
    "Term":"For a text area, how do you get the current character count for the control?",
    "Def":"var areaText = document.getElementById(\"textAreaId\").value;<br/>var charCount = areaText.length;"
  },
  {
    "Term":"What are the two methods common to most controls?",
    "Def":"focus //Brings focus to the control<br/>blur //Removes focus from the control"
  },
  {
    "Term":"What are the events common to most controls?",
    "Def":"onfocus //Fired when control receives focus<br/>onblur //Fired when control loses focus<br/>onclick //Fired when the control is clicked<br/>ondblclick //Fired when the control is double clicked<br/>onchange //Fired when the control's value is changed<br/>onselect //Fired when text is selected in a textbox or text area"
  },
  {
    "Term":"How do you concatenate multiple parts into a string?",
    "Def":"var stringVar = \"part 1:\" + \"part 2\";"
  },
  {
    "Term":"How do you access the text element in a <span> tag?",
    "Def":"document.getElementById(\"spanId\").firstChild;"
  },
  {
    "Term":"How do you alter the value of the text element in a span tag?",
    "Def":"document.getElementById(\"spanId\").firstChild.nodeValue = \"New Value\";"
  },
  {
    "Term":"For radio buttons, how do you set the current checked status of the control?",
    "Def":"document.getElementById(\"radioButtonId\").checked = true; //Could also be false"
  },
  {
    "Term":"For checkboxes, how do you set the current checked status of the control?",
    "Def":"document.getElementById(\"CheckboxId\").checked = true; //Could also be false"
  },
  {
    "Term":"For a text area, how do you set the current value of the control?",
    "Def":"document.getElementById(\"textAreaId\").value = \"Text Value\";"
  },
  {
    "Term":"What are the available properties for the Number object?",
    "Def":"Number.MAX_VALUE<br/>Number.MIN_VALUE<br/>Number.POSITIVE_INFINITY<br/>Number.NEGATIVE_INFINITY<br/>Number.NaN"
  },
  {
    "Term":"What are the 3 shortcuts for Number object properties?",
    "Def":"Infinity //Represents Number.POSITIVE_INFINITY<br/>-Infinity //Represents Number.NEGATIVE_INFINITY<br/>NaN //Represents Number.NaN"
  },
  {
    "Term":"What Number object method is used to round numbers to the specified number of decimal places?",
    "Def":"toFixed(digits);"
  },
  {
    "Term":"What Number object method is used to return a string with a given number base?",
    "Def":"toString(base); //Bases can range from 2 to 36"
  },
  {
    "Term":"What Number object method is used to return a number in exponential format with the specified number of decimal places?",
    "Def":"toExponential(digits);"
  },
  {
    "Term":"What Number object method is used to return a numerical string with the specified number of significant digits?",
    "Def":"toPrecision(precision);"
  },
  {
    "Term":"What is the syntax of a conditional operator?",
    "Def":"(Condition_Expression) ? Value_If_True : Value_If_False;"
  },
  {
    "Term":"What Math object method is used to return the absolute value of a given number?",
    "Def":"Math.abs(number);"
  },
  {
    "Term":"What Math object method is used to return a given number that has been rounded to the closes integer value?",
    "Def":"Math.round(number);"
  },
  {
    "Term":"What Math object method is used to return a given number rounded to the next highest integer value?",
    "Def":"Math.ceil(number);"
  },
  {
    "Term":"What Math object method is used to return a given number rounded to the next lowest integer value?",
    "Def":"Math.floor(number);"
  },
  {
    "Term":"What Math object method is used to return a given number raised to a given power?",
    "Def":"Math.pow(number, power);"
  },
  {
    "Term":"What Math object method is used to return the square root of a given number?",
    "Def":"Math.sqrt(number);"
  },
  {
    "Term":"What Math object method is used to return the highest value from a set of supplied numbers?",
    "Def":"Math.max(var1, var2, varN);"
  },
  {
    "Term":"What Math object method is used to return the lowest value for a set of supplied numbers?",
    "Def":"Math.min(var1, var2, varN);"
  },
  {
    "Term":"What Math object method is used to return a random number?",
    "Def":"Math.random() //Returns a value >= 0.0 but <1.0"
  },
  {
    "Term":"What is the string escape sequence to insert a tab in JavaScript?",
    "Def":"\\t"
  },
  {
    "Term":"What is the string escape sequence to insert a carriage return in JavaScript?",
    "Def":"\\r"
  },
  {
    "Term":"What is the string escape sequence to insert a form feed in JavaScript?",
    "Def":"\\f"
  },
  {
    "Term":"What is the string escape sequence to insert a vertical tab in JavaScript?",
    "Def":"\\v"
  },
  {
    "Term":"What is the string escape sequence to insert a double quote in JavaScript?",
    "Def":"\\\""
  },
  {
    "Term":"What is the string escape sequence to insert a single quote in JavaScript?",
    "Def":"\\'"
  },
  {
    "Term":"What is the string escape sequence to insert a backslash in JavaScript?",
    "Def":"\\\\"
  },
  {
    "Term":"What is the escape sequence used to insert a Unicode character into a string in JavaScript?",
    "Def":"\\udddd //\"dddd\" is replaced by the hexadecimal value for the Unicode character"
  },
  {
    "Term":"What String object method is used to get the character at a specified index position?",
    "Def":"charAt(position);"
  },
  {
    "Term":"What String object method is used to concatenate multiple strings?",
    "Def":"concat(var1, var2, varN);"
  },
  {
    "Term":"What String object method is used return the position of the first instance of a specified search string, starting from the specified index?",
    "Def":"indexOf(searchValue, startPosition); //If no startPosition is specified, the search begins from the start of the string"
  },
  {
    "Term":"What String object method is used to return a new string that contains part of the original string from the specified start position?",
    "Def":"substring(startIndex);"
  },
  {
    "Term":"What String object method is used to return a new string that contains part of the original string from the specified start position and up to but not including the specified stop index?",
    "Def":"substring(startIndex, stopIndex); //stopIndex is optional, if it is not specified, then it will go until the end of the string"
  },
  {
    "Term":"What String object method returns a new string containing the value of the original string but in all upper case?",
    "Def":"toUpperCase();"
  },
  {
    "Term":"What String object method returns a new string containing the value of the original string but in all lower case?",
    "Def":"toLowerCase();"
  },
  {
    "Term":"How do you create a new Date object?",
    "Def":"var dateObject = new Date(year, month, day, hours, minutes, seconds, milliseconds);"
  },
  {
    "Term":"What is the format to create a new Date object from a string?",
    "Def":"var dateObject = new Date(\"11/22/2012 18:25:35\");"
  },
  {
    "Term":"What Date object method is used to return the number of milliseconds since the start of GMT?",
    "Def":"getTime();"
  },
  {
    "Term":"What are the available get methods for a Date object?",
    "Def":"getTime();<br/>getFullYear(); //Returns 4 digit year<br/>getMonth(); //Returns months, starts with 0 for January<br/>getDate(); // Returns day of the month<br/>getHours(); //Returns hours in the day<br/>getMinutes(); //Returns the minutes in the current hour<br/>getSeconds(); //Returns seconds in the current minute<br/>getMilliseconds(); //Returns milliseconds in the current second"
  },
  {
    "Term":"What are the available set methods for a Date object?",
    "Def":"setFullYear(); //Sets 4 digit year<br/>setMonth(); //Sets months, starts with 0 for January<br/>setDate(); // Sets day of the month<br/>setHours(); //Sets hours in the day<br/>setMinutes(); //Sets the minutes in the current hour<br/>setSeconds(); //Sets seconds in the current minute<br/>setMilliseconds(); //Sets milliseconds in the current second"
  },
  {
    "Term":"What Date object method is used to return a string containing the date and time?",
    "Def":"toString();"
  },
  {
    "Term":"What Date object method is used to return a string containing the date?",
    "Def":"toDateString();"
  },
  {
    "Term":"What Date object method is used to return a string containing the time?",
    "Def":"toTimeString();"
  },
  {
    "Term":"What makes the identity operators different from the standard equality operators?",
    "Def":"They do not perform type coercion. //Eg. If data types don't match they fail the comparison"
  },
  {
    "Term":"What is the identity operator for equals?",
    "Def":"==="
  },
  {
    "Term":"What is the identity operator for not equal?",
    "Def":"!=="
  },
  {
    "Term":"What is the format for a switch statement in JavaScript?",
    "Def":"switch (inputVar) {<br/> case \"caseSwitch1\":<br/> //Operations here<br/> //No break so it cascades to caseSwitch2.<br/> case \"caseSwitch2\":<br/> //Operations here<br/> break; //Break so it will not continue to cascade down.<br/>}"
  },
  {
    "Term":"What is arity?",
    "Def":"adjective describing how many operands an operator expects"
  }
]